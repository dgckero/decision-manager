2020-05-15 09:31:44  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 09:31:44  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:31:44  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:31:45  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@3569edd5
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@1f651cd8
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@7d0332e1
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@7a356a0d
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@c827db
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@377c68c6
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@538cd0f2
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@238ad8c
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_af4a3f9d-8aef-47a4-8b98-827daf01294d
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@430fa4ef
2020-05-15 09:31:46  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_9225a82a-baa2-46b3-8593-87f5e6573708">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_af4a3f9d-8aef-47a4-8b98-827daf01294d">
        <inputEntry id="inputEntry_f0500360-0ace-4606-ba68-18d98f900c49" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {}
2020-05-15 09:31:46  ERROR   BPMNServerImpl.main:528  >>> Error evaluating valirable: {}, errror: FEEL/SCALA-01008 Error while evaluating expression: failed to evaluate expression 'name': no variable found for name 'name' 
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@f973499
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@4d33940d
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@43cf6ea3
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@37c5fc56
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@1c025cb
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@50825a02
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@68809cc7
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@703feacd
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_314a35c8-0f23-4ef9-accc-4930386a94e8
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@7051777c
2020-05-15 09:31:46  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_24c0824f-3862-4f65-b4fa-8773a4c9069f">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_314a35c8-0f23-4ef9-accc-4930386a94e8">
        <inputEntry id="inputEntry_507af831-b76c-4a97-a7af-fa493e8aa0c9" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:512  >>> Got 0 entities to be validated
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 0 entities has matched filters
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:31:46  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [99, 111, 110, 116, 101, 110, 116]
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@7927bd9f
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@532721fd
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@3b366632
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@51f49060
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@514eedd8
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@617fe9e1
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@6970140a
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@1cf2fed4
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_0e994fe2-425f-4a08-857d-cbe5ed568eaa
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@3af4e0bf
2020-05-15 09:33:08  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_4ec3e741-b107-4d7e-ab6d-65271a67d63a">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_0e994fe2-425f-4a08-857d-cbe5ed568eaa">
        <inputEntry id="inputEntry_9349ac31-18ac-42d9-9f7f-1207053b1cae" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:33:08  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:512  >>> Got 0 entities to be validated
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 0 entities has matched filters
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:33:09  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:33:57  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:57  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:57  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@7927bd9f
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@532721fd
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@3b366632
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@51f49060
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@514eedd8
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@617fe9e1
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@6970140a
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@1cf2fed4
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@3af4e0bf
2020-05-15 09:33:58  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_62182179-95ab-49fd-adc9-e1b7d5850153">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3">
        <inputEntry id="inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:33:58  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {}
2020-05-15 09:33:59  ERROR   BPMNServerImpl.main:528  >>> Error evaluating valirable: {}, errror: FEEL/SCALA-01008 Error while evaluating expression: failed to evaluate expression 'name': no variable found for name 'name' 
2020-05-15 09:35:43  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 09:35:43  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:35:43  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:35:43  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 09:35:44  DEBUG   BPMNServerImpl.main:583  >>> Read DMN model instance from DMN file
2020-05-15 09:35:44  DEBUG   BPMNServerImpl.main:585  >>> [END] Validated 1 decisions found on DMN File
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@7927bd9f
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@532721fd
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@3b366632
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@51f49060
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@514eedd8
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@617fe9e1
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@6970140a
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@1cf2fed4
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_2d7cfe50-939a-4535-bc23-a502df57623f
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@3af4e0bf
2020-05-15 09:36:27  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_b506aab7-4f70-42cf-9b43-a99c6439044f">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_2d7cfe50-939a-4535-bc23-a502df57623f">
        <inputEntry id="inputEntry_51c5bc5b-6c37-4dee-9d3c-8184429552db" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:36:27  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:36:28  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:36:28  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:36:28  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:36:28  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:36:28  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {}
2020-05-15 09:36:29  ERROR   BPMNServerImpl.main:528  >>> Error evaluating valirable: {}, errror: FEEL/SCALA-01008 Error while evaluating expression: failed to evaluate expression 'name': no variable found for name 'name' 
2020-05-15 09:39:10  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:39:10  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:39:10  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@2c7a8af2
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@10c07b8d
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@5d51e129
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@1894e40d
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@21c815e4
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@7342e05d
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@2a331b46
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@15383681
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_fbb151c3-f496-484a-89b0-6be095a268b1
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@743e66f7
2020-05-15 09:39:11  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_3a7b4192-55f8-4b6b-848e-61d9ae94ad59">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_fbb151c3-f496-484a-89b0-6be095a268b1">
        <inputEntry id="inputEntry_71163393-cfb0-483e-8536-e1bfe40fd5a2" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:39:11  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {}
2020-05-15 09:40:03  ERROR   BPMNServerImpl.main:528  >>> Error evaluating valirable: {}, errror: FEEL/SCALA-01008 Error while evaluating expression: failed to evaluate expression 'name': no variable found for name 'name' 
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@7927bd9f
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@532721fd
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@3b366632
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@51f49060
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@514eedd8
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@617fe9e1
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@6970140a
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@1cf2fed4
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_c5323054-18f5-4164-9350-787f6df91849
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@3af4e0bf
2020-05-15 09:40:54  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_e89fae4b-79e6-4052-bf6f-2506656adc50">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_c5323054-18f5-4164-9350-787f6df91849">
        <inputEntry id="inputEntry_44fe2d3b-230b-49a3-ab06-f79575f6b9e3" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:40:54  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:40:55  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@7927bd9f
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@532721fd
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@3b366632
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@51f49060
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@514eedd8
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@617fe9e1
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@6970140a
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@1cf2fed4
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_010541e3-555a-4ec6-95f0-60cfb2d035b1
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@3af4e0bf
2020-05-15 09:43:37  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_14988628-6a04-4880-885d-fee419b505c6">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_010541e3-555a-4ec6-95f0-60cfb2d035b1">
        <inputEntry id="inputEntry_56da9c91-12aa-4f9c-980c-481ce7fcf5d9" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:43:37  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:43:38  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@3b366632
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@51f49060
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@6970140a
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@1cf2fed4
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: true
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@3af4e0bf
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@245a26e1
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted_sendEMail", outputEntryId: Accepted_sendEMail, outputEntryLabel: Accepted_sendEMail
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@4d63b624
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@466cf502
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_473994a3-a087-4e18-9fec-bca5a87f2b1f
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@5b800468
2020-05-15 09:45:34  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_5d1e2a95-92e5-4293-a2f2-5e9e09ec2cdf">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_473994a3-a087-4e18-9fec-bca5a87f2b1f">
        <inputEntry id="inputEntry_6d32ef45-93e7-4df4-9cfe-efbe52032d60" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted_sendEMail" label="Accepted_sendEMail">
          <text>"Accepted_sendEMail"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:45:34  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:45:35  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:48:08  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:48:08  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:48:08  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@5d51e129
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@70c53dbe
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@2a331b46
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@743e66f7
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: true
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@109a2025
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@2241f05b
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted_sendEMail", outputEntryId: Accepted_sendEMail, outputEntryLabel: Accepted_sendEMail
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@761956ac
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@71978f46
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_eafe5366-4a93-48b2-a413-447a0eeab6c0
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@304d0259
2020-05-15 09:48:09  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_0a2937a9-92b7-4c51-9675-400f37b42363">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_eafe5366-4a93-48b2-a413-447a0eeab6c0">
        <inputEntry id="inputEntry_fc2c6762-b8f5-444b-9b21-f85351ff63b6" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted_sendEMail" label="Accepted_sendEMail">
          <text>"Accepted_sendEMail"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:48:09  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:48:14  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 09:48:14  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 09:48:14  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 09:48:14  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:48:24  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 09:48:24  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:48:24  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:48:24  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:48:24  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:48:24  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@3b366632
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@51f49060
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@6970140a
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@1cf2fed4
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: true
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@3af4e0bf
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@245a26e1
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted_sendEMail", outputEntryId: Accepted_sendEMail, outputEntryLabel: Accepted_sendEMail
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@4d63b624
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@466cf502
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_6593c96d-8ed8-487a-a1c8-9bcdaf3bd2df
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@5b800468
2020-05-15 09:49:26  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_0750f6b8-ff5d-4b15-abd4-cca599af39f4">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_6593c96d-8ed8-487a-a1c8-9bcdaf3bd2df">
        <inputEntry id="inputEntry_744ccb31-d112-4a3d-b3c9-eb229098d30b" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted_sendEMail" label="Accepted_sendEMail">
          <text>"Accepted_sendEMail"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:49:26  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:49:27  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:50:21  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 09:50:21  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:50:21  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:583  >>> Read DMN model instance from DMN file
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:585  >>> [END] Validated 1 decisions found on DMN File
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@1f14f20c
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@7daa61f3
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@62315f22
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@6e4ea0bd
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@56f2bbea
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@78f9ed3e
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@1059754c
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@b0964b2
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_ff061f38-5cc4-4bc1-9599-73c08f4f3e8b
2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@48e7b3d2
2020-05-15 09:50:22  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_0003287a-e607-4804-bd93-11a1bab5fdd4">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_ff061f38-5cc4-4bc1-9599-73c08f4f3e8b">
        <inputEntry id="inputEntry_e40a1634-71d6-430b-b2b9-e2548ccbcf9a" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:50:22  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {}
2020-05-15 09:50:23  ERROR   BPMNServerImpl.main:528  >>> Error evaluating valirable: {}, errror: FEEL/SCALA-01008 Error while evaluating expression: failed to evaluate expression 'name': no variable found for name 'name' 
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@512d4583
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@2abc224d
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@13cd7ea5
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@102d92c4
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: true
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@2b97cc1f
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@60723d6a
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted_sendEMail", outputEntryId: Accepted_sendEMail, outputEntryLabel: Accepted_sendEMail
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@18324f97
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@64f555e7
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_855e3434-dc43-432e-84a6-da4a96f51952
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@71178a52
2020-05-15 09:50:23  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_8b921248-d9af-4b64-a404-b958574ee6b0">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_855e3434-dc43-432e-84a6-da4a96f51952">
        <inputEntry id="inputEntry_54118cff-9381-447d-b9fb-77d0a935c5c4" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted_sendEMail" label="Accepted_sendEMail">
          <text>"Accepted_sendEMail"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:50:23  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted', typeDefinition=null, expressionLanguage='null', expression='"Accepted"'}]}]}}
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {}
2020-05-15 09:50:23  ERROR   BPMNServerImpl.main:528  >>> Error evaluating valirable: {}, errror: FEEL/SCALA-01008 Error while evaluating expression: failed to evaluate expression 'name': no variable found for name 'name' 
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@5ac7aa18
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@4cdd2c73
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@4abf3f0
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@4e4c3a38
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@293cde83
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@c27d163
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@57c88764
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@78faea5f
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_d7764337-e79a-44cc-923a-2d013a1e2d1e
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@37fdfb05
2020-05-15 09:50:23  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_6c1b4f64-eeee-4f88-9e43-91552ef7cf5e">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_d7764337-e79a-44cc-923a-2d013a1e2d1e">
        <inputEntry id="inputEntry_da74532a-d8a5-4224-94ef-0875de3514cd" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:50:23  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 09:52:59  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 09:52:59  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:52:59  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:52:59  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:583  >>> Read DMN model instance from DMN file
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:585  >>> [END] Validated 1 decisions found on DMN File
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@53b98ff6
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@3e6fd0b9
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@7fcff1b9
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@697446d4
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@76adb233
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@36074e47
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@36453307
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@7dcc91fd
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_3ffc0b65-d0f8-459e-b199-a18d8901f4a8
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@66eb985d
2020-05-15 09:53:00  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_9103defb-736e-4b54-abbf-957d1723f55d">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_3ffc0b65-d0f8-459e-b199-a18d8901f4a8">
        <inputEntry id="inputEntry_635e55c0-99b9-4c00-afd6-93f897a6fdbe" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@47f08b81
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@b9dfc5a
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:53:00  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@2787de58
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@659a2455
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: true
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@267517e4
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@426e505c
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted_sendEMail", outputEntryId: Accepted_sendEMail, outputEntryLabel: Accepted_sendEMail
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@5b022357
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@6f8e0cee
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_de94a6f8-5661-4b5e-a75e-b5f4d6537f06
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@614aeccc
2020-05-15 09:53:01  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_35538bb6-7709-4456-9579-35dc9d22951d">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_de94a6f8-5661-4b5e-a75e-b5f4d6537f06">
        <inputEntry id="inputEntry_e8260ba6-7155-4e8d-a20c-21e967e11e49" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted_sendEMail" label="Accepted_sendEMail">
          <text>"Accepted_sendEMail"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:53:01  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted', typeDefinition=null, expressionLanguage='null', expression='"Accepted"'}]}]}}
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:623  >>> [END] evaluateDmnDecision 
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:600  >>> [END] executeDmn, Got 1 entities accepted
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@675ffd1d
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@56303475
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@30506c0d
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@1dcca8d3
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@5631962
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@52a70627
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@6124287a
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@19569ebd
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_5a0a2008-d305-4f8f-8b61-99b12d793836
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@4632cfc
2020-05-15 09:53:01  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_afade5d0-ab62-4058-934f-cac27ce1d608">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_5a0a2008-d305-4f8f-8b61-99b12d793836">
        <inputEntry id="inputEntry_6eb1db0c-7779-4894-ae7d-0fe850cab0ea" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:53:01  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 09:58:21  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 09:58:21  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:58:21  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:58:21  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:58:22  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted', typeDefinition=null, expressionLanguage='null', expression='"Accepted"'}]}]}}
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:623  >>> [END] evaluateDmnDecision 
2020-05-15 09:58:22  DEBUG   BPMNServerImpl.main:600  >>> [END] executeDmn, Got 1 entities accepted
2020-05-15 09:59:42  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 09:59:43  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted', typeDefinition=null, expressionLanguage='null', expression='"Accepted"'}]}]}}
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 09:59:43  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:04:18  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 11:04:18  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 11:04:18  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:04:18  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:04:18  DEBUG   BPMNServerImpl.main:623  >>> [END] evaluateDmnDecision 
2020-05-15 11:04:18  DEBUG   BPMNServerImpl.main:600  >>> [END] executeDmn, Got 1 entities accepted
2020-05-15 11:06:31  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 11:06:32  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:06:32  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:06:32  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:06:33  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted', typeDefinition=null, expressionLanguage='null', expression='"Accepted"'}]}]}}
2020-05-15 11:06:33  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:06:33  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:06:33  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:06:33  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:06:33  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:06:33  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:06:33  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:06:34  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 11:06:34  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 11:06:34  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:06:34  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:06:34  DEBUG   BPMNServerImpl.main:623  >>> [END] evaluateDmnDecision 
2020-05-15 11:06:34  DEBUG   BPMNServerImpl.main:600  >>> [END] executeDmn, Got 1 entities accepted
2020-05-15 11:08:54  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 95, 115, 101, 110, 100, 69, 77, 97, 105, 108, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 95, 115, 101, 110, 100, 69, 77, 97, 105, 108, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 11:08:55  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:08:55  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:08:55  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:08:56  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted_sendEMail', typeDefinition=null, expressionLanguage='null', expression='"Accepted_sendEMail"'}]}]}}
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=true, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:623  >>> [END] evaluateDmnDecision 
2020-05-15 11:08:56  DEBUG   BPMNServerImpl.main:600  >>> [END] executeDmn, Got 1 entities accepted
2020-05-15 11:09:10  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 11:09:10  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:10  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:583  >>> Read DMN model instance from DMN file
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:585  >>> [END] Validated 1 decisions found on DMN File
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@470a9030
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@66d57c1b
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@27494e46
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@d59970a
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: true
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@1e411d81
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@53b98ff6
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted_sendEMail", outputEntryId: Accepted_sendEMail, outputEntryLabel: Accepted_sendEMail
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@3e6fd0b9
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@7fcff1b9
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_068a27ec-0e59-400e-b8db-6dc34b57ed08
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@697446d4
2020-05-15 11:09:11  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_7e176c45-74f1-4bda-9437-5a2b40057709">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_068a27ec-0e59-400e-b8db-6dc34b57ed08">
        <inputEntry id="inputEntry_f6b53747-4f67-44b9-b05e-7aed0901c296" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted_sendEMail" label="Accepted_sendEMail">
          <text>"Accepted_sendEMail"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:09:11  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=true, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 95, 115, 101, 110, 100, 69, 77, 97, 105, 108, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 95, 115, 101, 110, 100, 69, 77, 97, 105, 108, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:12  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted_sendEMail', typeDefinition=null, expressionLanguage='null', expression='"Accepted_sendEMail"'}]}]}}
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=true, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:623  >>> [END] evaluateDmnDecision 
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:600  >>> [END] executeDmn, Got 1 entities accepted
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@4a55a6e8
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@8c46918
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@226b143b
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@682bd3c4
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@f2e4acf
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@24097e9b
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@5eb97ced
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@68ba310d
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_102bcbe2-25e8-4457-8e3d-9bf6dc473780
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@153f66e7
2020-05-15 11:09:12  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_0dffff3d-3b40-45b0-9e59-909b6f6d8708">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_102bcbe2-25e8-4457-8e3d-9bf6dc473780">
        <inputEntry id="inputEntry_3913e070-8d05-4448-9278-31cf0004914d" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:12  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:49  >>> [INIT] Persisting Excel rows
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:51  >>> [END] Persisted Excel rows
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:76  >>> [INIT] Deleting all registers for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:78  >>> [END] Registers successfully deleted for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:35  >>> [INIT] createRowDataTable project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:37  >>> [END] createRowDataTable
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:89  >>> [INIT] Getting common data size for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:91  >>> [END] common data size 0 for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:32  DEBUG   RowDataServiceImpl.main:62  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-15 11:09:32  INFO    RowDataServiceImpl.main:64  >>> [END] Got all info from table: rowDataTableName
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:89  >>> [INIT] Getting projects 
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:56  >>> [INIT] Creating project projectName
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:32  >>> [INIT] Creating table PROJECTS if not exist
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:44  >>> [END] Table PROJECTS successfully created
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:64  >>> [END] Project Project(id=null, name=projectName, rowDataTableName=COMMONDATAS_projectName, emailTemplate=null) successfully created
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:109  >>> [INIT] Getting project by id 0
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:112  >>> [END] project found Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:76  >>> [INIT] Updating project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:78  >>> [END] Project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:89  >>> [INIT] Getting projects 
2020-05-15 11:09:35  WARN    ProjectDaoImpl.main:92  >>> [END] No project founds
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:32  >>> [INIT] Creating table PROJECTS if not exist
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:44  >>> [END] Table PROJECTS successfully created
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:124  >>> [INIT] deleting project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:35  DEBUG   ProjectDaoImpl.main:126  >>> [END] project successfully deleted
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:56  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully created
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:113  >>> [INIT] Getting project by Id 0
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:119  >>> [END] Found project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:68  >>> [INIT] Updating project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:71  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-15 11:09:36  ERROR   ProjectServiceImpl.main:93  >>> Error getting projects null
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:89  >>> [END] Got 1 projects
2020-05-15 11:09:36  DEBUG   ProjectServiceImpl.main:133  >>> [INIT] deleting project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:36  INFO    ProjectServiceImpl.main:135  >>> [END] project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully deleted
2020-05-15 11:09:36  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 11:09:36  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:36  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:36  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:583  >>> Read DMN model instance from DMN file
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:585  >>> [END] Validated 1 decisions found on DMN File
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: true, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@581b1c08
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@1c240cf2
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@78b7f805
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@58f2466c
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: true
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@5809fa26
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@64763e49
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted_sendEMail", outputEntryId: Accepted_sendEMail, outputEntryLabel: Accepted_sendEMail
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@23468512
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@69cd7630
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_aae0b62e-7e39-474c-9c20-0d263f93b223
2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@7e8279e5
2020-05-15 11:09:37  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_ed039109-55c8-46b1-b07c-544d6890d77d">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_aae0b62e-7e39-474c-9c20-0d263f93b223">
        <inputEntry id="inputEntry_5f9bee20-8fba-4fef-a476-b5d02c55563f" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted_sendEMail" label="Accepted_sendEMail">
          <text>"Accepted_sendEMail"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 11:09:37  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=true, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 115, 116, 97, 110, 100, 97, 108, 111, 110, 101, 61, 34, 110, 111, 34, 63, 62, 10, 60, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32, 105, 100, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 45, 110, 97, 109, 101, 34, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 61, 34, 104, 116, 116, 112, 58, 47, 47, 99, 97, 109, 117, 110, 100, 97, 46, 111, 114, 103, 47, 115, 99, 104, 101, 109, 97, 47, 49, 46, 48, 47, 100, 109, 110, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 111, 109, 103, 46, 111, 114, 103, 47, 115, 112, 101, 99, 47, 68, 77, 78, 47, 50, 48, 49, 53, 49, 49, 48, 49, 47, 100, 109, 110, 46, 120, 115, 100, 34, 62, 10, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 48, 34, 32, 110, 97, 109, 101, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 60, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 32, 104, 105, 116, 80, 111, 108, 105, 99, 121, 61, 34, 67, 79, 76, 76, 69, 67, 84, 34, 32, 105, 100, 61, 34, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 45, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 95, 54, 50, 49, 56, 50, 49, 55, 57, 45, 57, 53, 97, 98, 45, 52, 57, 102, 100, 45, 97, 100, 99, 57, 45, 101, 49, 98, 55, 100, 53, 56, 53, 48, 49, 53, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 95, 110, 97, 109, 101, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 102, 105, 108, 116, 101, 114, 99, 108, 97, 115, 115, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 110, 97, 109, 101, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 62, 10, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 32, 105, 100, 61, 34, 111, 117, 116, 112, 117, 116, 49, 34, 32, 108, 97, 98, 101, 108, 61, 34, 114, 117, 108, 101, 32, 109, 97, 116, 99, 104, 101, 100, 63, 34, 32, 116, 121, 112, 101, 82, 101, 102, 61, 34, 115, 116, 114, 105, 110, 103, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 60, 114, 117, 108, 101, 32, 105, 100, 61, 34, 114, 117, 108, 101, 95, 102, 48, 49, 52, 100, 57, 57, 57, 45, 54, 98, 98, 57, 45, 52, 98, 57, 51, 45, 98, 51, 102, 56, 45, 49, 57, 49, 52, 99, 101, 52, 55, 48, 52, 98, 51, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 95, 49, 102, 101, 97, 98, 50, 54, 100, 45, 56, 101, 57, 98, 45, 52, 57, 52, 51, 45, 56, 54, 54, 55, 45, 55, 97, 97, 52, 50, 102, 97, 97, 49, 102, 57, 50, 34, 32, 108, 97, 98, 101, 108, 61, 34, 110, 97, 109, 101, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 118, 97, 108, 117, 101, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 105, 110, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 32, 105, 100, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 34, 32, 108, 97, 98, 101, 108, 61, 34, 65, 99, 99, 101, 112, 116, 101, 100, 95, 115, 101, 110, 100, 69, 77, 97, 105, 108, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 101, 120, 116, 62, 34, 65, 99, 99, 101, 112, 116, 101, 100, 95, 115, 101, 110, 100, 69, 77, 97, 105, 108, 34, 60, 47, 116, 101, 120, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 111, 117, 116, 112, 117, 116, 69, 110, 116, 114, 121, 62, 10, 32, 32, 32, 32, 32, 32, 60, 47, 114, 117, 108, 101, 62, 10, 32, 32, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 84, 97, 98, 108, 101, 62, 10, 32, 32, 60, 47, 100, 101, 99, 105, 115, 105, 111, 110, 62, 10, 60, 47, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 62]
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:612  >>> [INIT] evaluateDmnDecision by project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:38  INFO    BPMNServerImpl.main:618  >>> Evaluating decision DmnDecisionTableImpl{ key= decision-0, name= decision-name, requiredDecision=[], decisionLogic=DmnDecisionTableImpl{ hitPolicyHandler=CollectHitPolicyHandler{}, inputs=[DmnDecisionTableInputImpl{id='input_62182179-95ab-49fd-adc9-e1b7d5850153', name='null', expression=DmnExpressionImpl{id='inputExpression_name', name='null', typeDefinition=DmnTypeDefinitionImpl{typeName='filterclass'}, expressionLanguage='null', expression='name'}, inputVariable='null'}], outputs=[DmnDecisionTableOutputImpl{id='output1', name='rule matched?', outputName='null', typeDefinition=DmnTypeDefinitionImpl{typeName='string'}}], rules=[DmnDecisionTableRuleImpl{id='rule_f014d999-6bb9-4b93-b3f8-1914ce4704b3', name='null', conditions=[DmnExpressionImpl{id='inputEntry_1feab26d-8e9b-4943-8667-7aa42faa1f92', name='name', typeDefinition=null, expressionLanguage='null', expression='"value"'}], conclusions=[DmnExpressionImpl{id='Accepted', name='Accepted_sendEMail', typeDefinition=null, expressionLanguage='null', expression='"Accepted_sendEMail"'}]}]}}
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted_sendEMail}, sendEmail: true
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:523  >>> Result found with email information
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:481  >>> [INIT] sendEmail contactFilter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=true, contactFilter=true, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)), project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:496  >>> [END] sendEmail
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:623  >>> [END] evaluateDmnDecision 
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:600  >>> [END] executeDmn, Got 1 entities accepted
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@5fffb692
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@48cb2d73
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@243bf087
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@3086f480
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@126f8f24
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@35e98af
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@781aff8b
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@7fbf26fc
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_6173a0d3-87ae-40f9-be16-92047a82936b
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@11c78080
2020-05-15 11:09:38  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_bbae862c-8030-4b1e-aacb-fc287468a8a5">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_6173a0d3-87ae-40f9-be16-92047a82936b">
        <inputEntry id="inputEntry_79cdab47-f497-48d7-8484-1c9cd25ca952" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:512  >>> Got 1 entities to be validated
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:238  >>> [INIT] parseEntityToVariableMap
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:257  >>> [INIT] skipCommonEntity name
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:260  >>> [END] skipCommonEntity: name, result: false
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:246  >>> [END] parseEntityToVariableMap: {name=value}
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:271  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:274  >>> [INIT] sendEmail DmnDecisionRuleResult: {null=Accepted}, sendEmail: false
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 1 entities has matched filters
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-15 11:09:38  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-15 11:09:38  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   FilterServiceImpl.main:144  >>> Found contact filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)) for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   FilterServiceImpl.main:147  >>> [END] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:38  DEBUG   FilterServiceImpl.main:93  >>> [INIT] Getting All filters
2020-05-15 11:09:38  DEBUG   FilterServiceImpl.main:95  >>> [END] Found 1 filters
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:121  >>> [INIT] Updating 1 filters 
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:124  >>> [END] Filters successfully updated 
2020-05-15 11:09:39  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:44  >>> Mapping filterDto list to FilterEntity list
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:50  >>> Setting true on contact filter that contains Email information
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:64  >>> [INIT] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:82  >>> [END] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-15 11:09:39  INFO    FilterServiceImpl.main:54  >>> [END] persistFilterList
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:107  >>> [INIT] Getting filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   FilterServiceImpl.main:109  >>> [END] Found 1 filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:141  >>> [END] Filters updated
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:93  >>> [END] Persisted filters got from Excel
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','15/05/2020 11:09:39')
2020-05-15 11:09:39  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:73  >>> [END] Persisted Excel rows into commonDatas table
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:125  >>> [END] Registers successfully deleted for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:51  >>> [END] rowDataTableName table successfully created
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:138  >>> [END] common data size 1 for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-15 11:09:39  DEBUG   RowDataDaoImpl.main:111  >>> [END] Got all info from table: rowDataTableName
2020-05-15 11:09:39  DEBUG   ApplicationConfig.main:82  >>> [INIT] Configuring modelMapper
2020-05-15 11:09:39  DEBUG   ApplicationConfig.main:88  >>> [END] modelMapper successfully configured
2020-05-15 11:09:39  DEBUG   ApplicationConfig.main:188  >>> [INIT] Configuring exceptionTranslation
2020-05-15 11:09:39  DEBUG   ApplicationConfig.main:190  >>> [END] Configuring exceptionTranslation
2020-05-15 11:09:39  DEBUG   ApplicationConfig.main:98  >>> [INIT] Configuring additionalProperties
2020-05-15 11:09:39  DEBUG   ApplicationConfig.main:104  >>> [END] Configuring additionalProperties
