2020-05-13 06:36:57  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 06:36:57  DEBUG   FilterServiceImpl.main:93  >>> [INIT] Getting All filters
2020-05-13 06:36:57  DEBUG   FilterServiceImpl.main:95  >>> [END] Found 1 filters
2020-05-13 06:36:57  DEBUG   FilterServiceImpl.main:121  >>> [INIT] Updating 1 filters 
2020-05-13 06:36:58  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 06:36:58  DEBUG   FilterServiceImpl.main:107  >>> [INIT] Getting filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 06:44:43  DEBUG   RowDataServiceImpl.main:49  >>> [INIT] Persisting Excel rows
2020-05-13 06:44:43  DEBUG   RowDataServiceImpl.main:51  >>> [END] Persisted Excel rows
2020-05-13 06:53:11  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 06:53:11  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 06:53:11  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 06:53:11  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 06:53:11  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 06:53:12  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 06:55:13  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 06:55:13  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 06:55:13  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 06:55:13  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 06:55:13  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 06:55:13  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 07:06:19  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 07:07:37  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 07:08:19  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 07:09:46  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 07:09:46  DEBUG   RowDataDaoImpl.main:73  >>> [END] Persisted Excel rows into commonDatas table
2020-05-13 07:11:06  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 07:11:06  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 07:14:42  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 07:14:42  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 07:14:42  DEBUG   RowDataDaoImpl.main:51  >>> [END] rowDataTableName table successfully created
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:73  >>> [END] Persisted Excel rows into commonDatas table
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:125  >>> [END] Registers successfully deleted for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:51  >>> [END] rowDataTableName table successfully created
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 07:20:20  DEBUG   RowDataDaoImpl.main:111  >>> [END] Got all info from table: rowDataTableName
2020-05-13 07:22:56  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:22:56  DEBUG   RowDataDaoImpl.main:138  >>> [END] common data size 1 for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:31:53  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:31:53  DEBUG   RowDataDaoImpl.main:138  >>> [END] common data size 1 for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:73  >>> [END] Persisted Excel rows into commonDatas table
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:125  >>> [END] Registers successfully deleted for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:51  >>> [END] rowDataTableName table successfully created
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:138  >>> [END] common data size 1 for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 07:32:52  DEBUG   RowDataDaoImpl.main:111  >>> [END] Got all info from table: rowDataTableName
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:57  >>> [INIT] Creating project projectName
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:110  >>> [INIT] Getting project by id 0
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:77  >>> [INIT] Updating project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 07:33:35  DEBUG   ProjectDaoImpl.main:125  >>> [INIT] deleting project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:39:02  DEBUG   ProjectDaoImpl.main:57  >>> [INIT] Creating project projectName
2020-05-13 07:39:02  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 07:39:02  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 07:39:02  DEBUG   ProjectDaoImpl.main:65  >>> [END] Project Project(id=null, name=projectName, rowDataTableName=COMMONDATAS_projectName, emailTemplate=null) successfully created
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:57  >>> [INIT] Creating project projectName
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:65  >>> [END] Project Project(id=null, name=projectName, rowDataTableName=COMMONDATAS_projectName, emailTemplate=null) successfully created
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:77  >>> [INIT] Updating project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:79  >>> [END] Project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 07:49:56  WARN    ProjectDaoImpl.main:93  >>> [END] No project founds
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:125  >>> [INIT] deleting project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:49:56  DEBUG   ProjectDaoImpl.main:127  >>> [END] project successfully deleted
2020-05-13 07:51:58  DEBUG   ProjectDaoImpl.main:110  >>> [INIT] Getting project by id 0
2020-05-13 07:51:58  DEBUG   ProjectDaoImpl.main:113  >>> [END] project found Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:57  >>> [INIT] Creating project projectName
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:65  >>> [END] Project Project(id=null, name=projectName, rowDataTableName=COMMONDATAS_projectName, emailTemplate=null) successfully created
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:110  >>> [INIT] Getting project by id 0
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:113  >>> [END] project found Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:77  >>> [INIT] Updating project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:79  >>> [END] Project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 07:52:16  WARN    ProjectDaoImpl.main:93  >>> [END] No project founds
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:125  >>> [INIT] deleting project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:52:16  DEBUG   ProjectDaoImpl.main:127  >>> [END] project successfully deleted
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:152  >>> [INIT] Getting Filters having contactFilter active for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','13/05/2020 07:58:04')
2020-05-13 07:58:04  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-13 08:17:41  DEBUG   FilterDaoImpl.main:152  >>> [INIT] Getting Filters having contactFilter active for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 08:43:39  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-13 08:43:39  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-13 08:43:39  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 08:43:39  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 08:43:40  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 08:43:40  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-13 08:43:40  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-13 08:43:40  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-13 08:43:40  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','13/05/2020 08:43:40')
2020-05-13 08:43:40  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-13 08:48:05  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 08:49:25  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 08:51:29  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 08:51:29  DEBUG   FilterDaoImpl.main:141  >>> [END] Filters updated
2020-05-13 09:08:32  DEBUG   FilterDaoImpl.main:152  >>> [INIT] Getting Filters having contactFilter active for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:141  >>> [END] Filters updated
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','13/05/2020 09:08:54')
2020-05-13 09:08:54  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-13 09:09:50  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 09:09:50  DEBUG   FilterDaoImpl.main:93  >>> [END] Persisted filters got from Excel
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:141  >>> [END] Filters updated
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:93  >>> [END] Persisted filters got from Excel
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','13/05/2020 09:10:27')
2020-05-13 09:10:27  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-13 09:11:04  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:11:04  DEBUG   FilterServiceImpl.main:93  >>> [INIT] Getting All filters
2020-05-13 09:11:04  DEBUG   FilterServiceImpl.main:95  >>> [END] Found 1 filters
2020-05-13 09:11:04  DEBUG   FilterServiceImpl.main:121  >>> [INIT] Updating 1 filters 
2020-05-13 09:11:04  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:11:04  DEBUG   FilterServiceImpl.main:107  >>> [INIT] Getting filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:12:57  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:19:52  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:19:52  DEBUG   FilterServiceImpl.main:144  >>> Found contact filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)) for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:19:52  DEBUG   FilterServiceImpl.main:147  >>> [END] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:27:18  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:27:18  DEBUG   FilterServiceImpl.main:44  >>> Mapping filterDto list to FilterEntity list
2020-05-13 09:27:19  DEBUG   FilterServiceImpl.main:50  >>> Setting true on contact filter that contains Email information
2020-05-13 09:27:19  DEBUG   FilterServiceImpl.main:64  >>> [INIT] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 09:27:19  DEBUG   FilterServiceImpl.main:82  >>> [END] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 09:27:19  INFO    FilterServiceImpl.main:54  >>> [END] persistFilterList
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:144  >>> Found contact filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)) for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:147  >>> [END] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:93  >>> [INIT] Getting All filters
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:95  >>> [END] Found 1 filters
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:121  >>> [INIT] Updating 1 filters 
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:124  >>> [END] Filters successfully updated 
2020-05-13 09:32:10  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:44  >>> Mapping filterDto list to FilterEntity list
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:50  >>> Setting true on contact filter that contains Email information
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:64  >>> [INIT] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:82  >>> [END] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 09:32:10  INFO    FilterServiceImpl.main:54  >>> [END] persistFilterList
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:107  >>> [INIT] Getting filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:32:10  DEBUG   FilterServiceImpl.main:109  >>> [END] Found 1 filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:34:54  DEBUG   ProjectServiceImpl.main:51  >>> [INIT] createProject name
2020-05-13 09:34:54  DEBUG   ProjectServiceImpl.main:54  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully created
2020-05-13 09:36:17  DEBUG   ProjectServiceImpl.main:51  >>> [INIT] createProject name
2020-05-13 09:37:47  DEBUG   ProjectServiceImpl.main:66  >>> [INIT] Updating project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:37:47  DEBUG   ProjectServiceImpl.main:69  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 09:38:26  DEBUG   ProjectServiceImpl.main:81  >>> [INIT] Getting projects 
2020-05-13 09:38:26  DEBUG   ProjectServiceImpl.main:87  >>> [END] Got 1 projects
2020-05-13 09:39:12  DEBUG   ProjectServiceImpl.main:81  >>> [INIT] Getting projects 
2020-05-13 09:39:12  ERROR   ProjectServiceImpl.main:91  >>> Error getting projects null
2020-05-13 09:42:24  DEBUG   ProjectServiceImpl.main:81  >>> [INIT] Getting projects 
2020-05-13 09:42:57  DEBUG   ProjectServiceImpl.main:81  >>> [INIT] Getting projects 
2020-05-13 09:42:57  ERROR   ProjectServiceImpl.main:91  >>> Error getting projects null; uncategorized SQLException; SQL state [null]; error code [1]; null; nested exception is java.sql.SQLException
2020-05-13 09:42:57  WARN    ProjectServiceImpl.main:93  >>> No project founds
2020-05-13 09:42:57  DEBUG   ProjectServiceImpl.main:81  >>> [INIT] Getting projects 
2020-05-13 09:42:57  ERROR   ProjectServiceImpl.main:91  >>> Error getting projects null; uncategorized SQLException; SQL state [null]; error code [1]; null; nested exception is java.sql.SQLException
2020-05-13 09:42:57  WARN    ProjectServiceImpl.main:93  >>> No project founds
2020-05-13 09:44:24  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 09:44:24  ERROR   ProjectServiceImpl.main:93  >>> Error getting projects null
2020-05-13 09:45:21  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 09:45:21  ERROR   ProjectServiceImpl.main:93  >>> Error getting projects null
2020-05-13 09:46:50  DEBUG   ProjectServiceImpl.main:113  >>> [INIT] Getting project by Id 0
2020-05-13 09:46:50  DEBUG   ProjectServiceImpl.main:119  >>> [END] Found project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:47:46  DEBUG   ProjectServiceImpl.main:133  >>> [INIT] deleting project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:47:46  INFO    ProjectServiceImpl.main:135  >>> [END] project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully deleted
2020-05-13 09:48:16  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 09:48:16  DEBUG   ProjectServiceImpl.main:56  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully created
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:113  >>> [INIT] Getting project by Id 0
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:119  >>> [END] Found project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:68  >>> [INIT] Updating project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:71  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 09:48:17  ERROR   ProjectServiceImpl.main:93  >>> Error getting projects null
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:89  >>> [END] Got 1 projects
2020-05-13 09:48:17  DEBUG   ProjectServiceImpl.main:133  >>> [INIT] deleting project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:48:17  INFO    ProjectServiceImpl.main:135  >>> [END] project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully deleted
2020-05-13 09:52:14  DEBUG   RowDataServiceImpl.main:49  >>> [INIT] Persisting Excel rows
2020-05-13 09:52:14  DEBUG   RowDataServiceImpl.main:51  >>> [END] Persisted Excel rows
2020-05-13 09:52:14  DEBUG   RowDataServiceImpl.main:76  >>> [INIT] Deleting all registers for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:14  DEBUG   RowDataServiceImpl.main:35  >>> [INIT] createRowDataTable project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:15  DEBUG   RowDataServiceImpl.main:89  >>> [INIT] Getting common data size for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:15  DEBUG   RowDataServiceImpl.main:62  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:57  >>> [INIT] Creating project projectName
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:65  >>> [END] Project Project(id=null, name=projectName, rowDataTableName=COMMONDATAS_projectName, emailTemplate=null) successfully created
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:110  >>> [INIT] Getting project by id 0
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:113  >>> [END] project found Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:77  >>> [INIT] Updating project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:79  >>> [END] Project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 09:52:19  WARN    ProjectDaoImpl.main:93  >>> [END] No project founds
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:125  >>> [INIT] deleting project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:19  DEBUG   ProjectDaoImpl.main:127  >>> [END] project successfully deleted
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:56  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully created
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:113  >>> [INIT] Getting project by Id 0
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:119  >>> [END] Found project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:68  >>> [INIT] Updating project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:71  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 09:52:19  ERROR   ProjectServiceImpl.main:93  >>> Error getting projects null
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:89  >>> [END] Got 1 projects
2020-05-13 09:52:19  DEBUG   ProjectServiceImpl.main:133  >>> [INIT] deleting project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:19  INFO    ProjectServiceImpl.main:135  >>> [END] project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully deleted
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:144  >>> Found contact filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)) for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:147  >>> [END] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:93  >>> [INIT] Getting All filters
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:95  >>> [END] Found 1 filters
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:121  >>> [INIT] Updating 1 filters 
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:124  >>> [END] Filters successfully updated 
2020-05-13 09:52:20  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:44  >>> Mapping filterDto list to FilterEntity list
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:50  >>> Setting true on contact filter that contains Email information
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:64  >>> [INIT] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:82  >>> [END] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 09:52:20  INFO    FilterServiceImpl.main:54  >>> [END] persistFilterList
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:107  >>> [INIT] Getting filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   FilterServiceImpl.main:109  >>> [END] Found 1 filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:141  >>> [END] Filters updated
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:93  >>> [END] Persisted filters got from Excel
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','13/05/2020 09:52:20')
2020-05-13 09:52:20  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:73  >>> [END] Persisted Excel rows into commonDatas table
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:125  >>> [END] Registers successfully deleted for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:51  >>> [END] rowDataTableName table successfully created
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:138  >>> [END] common data size 1 for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 09:52:20  DEBUG   RowDataDaoImpl.main:111  >>> [END] Got all info from table: rowDataTableName
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:49  >>> [INIT] Persisting Excel rows
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:51  >>> [END] Persisted Excel rows
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:76  >>> [INIT] Deleting all registers for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:78  >>> [END] Registers successfully deleted for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:35  >>> [INIT] createRowDataTable project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:37  >>> [END] createRowDataTable
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:89  >>> [INIT] Getting common data size for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:91  >>> [END] common data size 0 for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:04  DEBUG   RowDataServiceImpl.main:62  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 10:01:04  INFO    RowDataServiceImpl.main:64  >>> [END] Got all info from table: rowDataTableName
2020-05-13 10:01:31  DEBUG   RowDataServiceImpl.main:49  >>> [INIT] Persisting Excel rows
2020-05-13 10:01:31  DEBUG   RowDataServiceImpl.main:51  >>> [END] Persisted Excel rows
2020-05-13 10:01:32  DEBUG   RowDataServiceImpl.main:76  >>> [INIT] Deleting all registers for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:32  DEBUG   RowDataServiceImpl.main:78  >>> [END] Registers successfully deleted for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:32  DEBUG   RowDataServiceImpl.main:35  >>> [INIT] createRowDataTable project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:32  DEBUG   RowDataServiceImpl.main:37  >>> [END] createRowDataTable
2020-05-13 10:01:32  DEBUG   RowDataServiceImpl.main:89  >>> [INIT] Getting common data size for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:32  DEBUG   RowDataServiceImpl.main:91  >>> [END] common data size 0 for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:32  DEBUG   RowDataServiceImpl.main:62  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 10:01:32  INFO    RowDataServiceImpl.main:64  >>> [END] Got all info from table: rowDataTableName
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:57  >>> [INIT] Creating project projectName
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:65  >>> [END] Project Project(id=null, name=projectName, rowDataTableName=COMMONDATAS_projectName, emailTemplate=null) successfully created
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:110  >>> [INIT] Getting project by id 0
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:113  >>> [END] project found Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:77  >>> [INIT] Updating project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:79  >>> [END] Project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 10:01:37  WARN    ProjectDaoImpl.main:93  >>> [END] No project founds
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:125  >>> [INIT] deleting project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   ProjectDaoImpl.main:127  >>> [END] project successfully deleted
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:56  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully created
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:113  >>> [INIT] Getting project by Id 0
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:119  >>> [END] Found project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:68  >>> [INIT] Updating project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:71  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 10:01:37  ERROR   ProjectServiceImpl.main:93  >>> Error getting projects null
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:89  >>> [END] Got 1 projects
2020-05-13 10:01:37  DEBUG   ProjectServiceImpl.main:133  >>> [INIT] deleting project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  INFO    ProjectServiceImpl.main:135  >>> [END] project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully deleted
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:144  >>> Found contact filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)) for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:147  >>> [END] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:93  >>> [INIT] Getting All filters
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:95  >>> [END] Found 1 filters
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:121  >>> [INIT] Updating 1 filters 
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:124  >>> [END] Filters successfully updated 
2020-05-13 10:01:37  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:44  >>> Mapping filterDto list to FilterEntity list
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:50  >>> Setting true on contact filter that contains Email information
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:64  >>> [INIT] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:82  >>> [END] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:01:37  INFO    FilterServiceImpl.main:54  >>> [END] persistFilterList
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:107  >>> [INIT] Getting filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   FilterServiceImpl.main:109  >>> [END] Found 1 filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:141  >>> [END] Filters updated
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:93  >>> [END] Persisted filters got from Excel
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','13/05/2020 10:01:37')
2020-05-13 10:01:37  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:73  >>> [END] Persisted Excel rows into commonDatas table
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:125  >>> [END] Registers successfully deleted for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:51  >>> [END] rowDataTableName table successfully created
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:138  >>> [END] common data size 1 for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 10:01:38  DEBUG   RowDataDaoImpl.main:111  >>> [END] Got all info from table: rowDataTableName
2020-05-13 10:03:58  DEBUG   BPMNServerImpl.main:579  >>> [INIT] Validating DMN file
2020-05-13 10:03:58  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-13 10:03:58  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-13 10:03:59  DEBUG   BPMNServerImpl.main:581  >>> Created default DMN Engine configuration
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@7e31ce0f
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@99a65d3
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@3088660d
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@42cc13a0
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@32fdec40
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@6813a331
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@1bd81830
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@39ab59f8
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_ac00b645-c458-4972-bb55-01f8a27fad18
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@64e92d61
2020-05-13 10:04:00  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_8e841227-989e-4bbf-8cc3-0f4c2bce058d">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_ac00b645-c458-4972-bb55-01f8a27fad18">
        <inputEntry id="inputEntry_e7cc616f-1c16-4ca1-be95-880e1eade6a3" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-13 10:04:00  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:512  >>> Got 0 entities to be validated
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 0 entities has matched filters
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:342  >>> [INIT] createAndRunDMN for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), sendEmail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:369  >>> [INIT] generateDmn based on project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm, decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:399  >>> [INIT] createDmnModelInstance based on decisionTableId: decisionTable-name, definitionId: definition-0, definitionName: definition-name, decisionId: decision-0, decisionName: decision-name, sendMail: false, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:74  >>> [INIT] createDefinition definitionName: definition-name
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:79  >>> [END] createDefinition definitionName: definition-name
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:406  >>> Created definition with namedefinition-name and id definition-0
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:92  >>> [INIT] createDecision decisionName: decision-name
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:96  >>> [END] createDecision decisionName: decision-name
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:411  >>> Created decision with namedecision-name and id decision-0
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:307  >>> [INIT] createDecisionTable decisionTableId: decisionTable-name, activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:435  >>> [INIT] createInputs based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:439  >>> creating input for filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:326  >>> [INIT] createInput with name: name, filterClass: filterClass
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:140  >>> [INIT] createInputExpression name:name, filterClass: filterClass
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:160  >>> [INIT] getTypeRef by filterClass: filterClass
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:168  >>> [END] getTypeRef : filterclass
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:149  >>> [END] createInputExpression :org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl@65f00478
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:329  >>> [END] createInput: org.camunda.bpm.model.dmn.impl.instance.InputImpl@2424686b
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:443  >>> [END] createInputs
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:122  >>> [INIT] createOutput
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:127  >>> [END] createOutput :org.camunda.bpm.model.dmn.impl.instance.OutputImpl@6ea94d6a
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:313  >>> [END] createDecisionTable: org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl@28486680
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:416  >>> Created decisionTable with id decisionTable-name
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:456  >>> [INIT] createRule based on activeFilters: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], sendMail: false
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:180  >>> [INIT] createInputEntry based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:196  >>> [INIT] createText based on filter: FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:205  >>> [END] createText, text: org.camunda.bpm.model.dmn.impl.instance.TextImpl@4d7e7435
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:184  >>> [END] createInputEntry: org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl@4a1e3ac1
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:461  >>> Added inputEntry by filterFilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:219  >>> [INIT] createOutputEntry expression: "Accepted", outputEntryId: Accepted, outputEntryLabel: Accepted
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:227  >>> [INIT] createOutputEntry: org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl@6e78fcf5
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:469  >>> [END] createRule result: org.camunda.bpm.model.dmn.impl.instance.RuleImpl@56febdc
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:421  >>> Created rule with id rule_81dd79f1-6418-4193-bbda-1b9c585251c6
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:423  >>> [END] createDmnModelInstance successfully created: org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl@3b8ee898
2020-05-13 10:04:01  INFO    BPMNServerImpl.main:374  >>> Validating model 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions id="definition-0" name="definition-name" namespace="http://camunda.org/schema/1.0/dmn" xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd">
  <decision id="decision-0" name="decision-name">
    <decisionTable hitPolicy="COLLECT" id="decisionTable-name">
      <input id="input_ff6257b0-8611-41db-a565-8d419e612f27">
        <inputExpression id="inputExpression_name" typeRef="filterclass">
          <text>name</text>
        </inputExpression>
      </input>
      <output id="output1" label="rule matched?" typeRef="string"/>
      <rule id="rule_81dd79f1-6418-4193-bbda-1b9c585251c6">
        <inputEntry id="inputEntry_eae4d969-ffdd-43cb-a6e3-222d22f41a06" label="name">
          <text>"value"</text>
        </inputEntry>
        <outputEntry id="Accepted" label="Accepted">
          <text>"Accepted"</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
</definitions>

2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:108  >>> [INIT] generateDmnFile project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate), outputFilePath: namedecision-manager.dm
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:112  >>> [END] generated dmn file: /home/david/IdeaProjects/decision-manager/decision-core/namedecision-manager.dm
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:547  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:284  >>> [INIT] getDmnEngine
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:294  >>> [END] getDmnEngine
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:563  >>> [INIT] evaluateDecisionTable decisionId: decision-0, project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:508  >>> [INIT] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:512  >>> Got 0 entities to be validated
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:534  >>> [END] evaluateEntities for project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:567  >>> [END] evaluateDecisionTable, 0 entities has matched filters
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:549  >>> [END] evaluateDecisionTable
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:379  >>> [END] generateDmn
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:348  >>> [END] createAndRunDMN
2020-05-13 10:04:01  DEBUG   BPMNServerImpl.main:595  >>> [INIT] executeDmn, Running DMN file [99, 111, 110, 116, 101, 110, 116]
2020-05-13 10:08:50  DEBUG   ApplicationConfig.main:153  >>> [INIT] Configuring transactionManager for entityManagerFactory: null
2020-05-13 10:08:50  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:08:50  DEBUG   ApplicationConfig.main:134  >>> [INIT] Configuring sessionFactory
2020-05-13 10:08:50  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:08:50  DEBUG   ApplicationConfig.main:82  >>> [INIT] Configuring modelMapper
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:88  >>> [END] modelMapper successfully configured
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:188  >>> [INIT] Configuring exceptionTranslation
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:190  >>> [END] Configuring exceptionTranslation
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:201  >>> [INIT] Configuring jdbcTemplate
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:170  >>> [INIT] Configuring annotationDrivenTransactionManager
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:134  >>> [INIT] Configuring sessionFactory
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:98  >>> [INIT] Configuring additionalProperties
2020-05-13 10:08:51  DEBUG   ApplicationConfig.main:214  >>> [INIT] Configuring Mail Sender
2020-05-13 10:12:05  DEBUG   ApplicationConfig.main:153  >>> [INIT] Configuring transactionManager for entityManagerFactory: null
2020-05-13 10:12:05  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:13:28  DEBUG   ApplicationConfig.main:170  >>> [INIT] Configuring annotationDrivenTransactionManager
2020-05-13 10:13:29  DEBUG   ApplicationConfig.main:134  >>> [INIT] Configuring sessionFactory
2020-05-13 10:13:29  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:14:02  DEBUG   ApplicationConfig.main:134  >>> [INIT] Configuring sessionFactory
2020-05-13 10:14:02  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:14:02  DEBUG   ApplicationConfig.main:82  >>> [INIT] Configuring modelMapper
2020-05-13 10:14:03  DEBUG   ApplicationConfig.main:88  >>> [END] modelMapper successfully configured
2020-05-13 10:14:03  DEBUG   ApplicationConfig.main:188  >>> [INIT] Configuring exceptionTranslation
2020-05-13 10:14:04  DEBUG   ApplicationConfig.main:190  >>> [END] Configuring exceptionTranslation
2020-05-13 10:14:04  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:14:04  DEBUG   ApplicationConfig.main:201  >>> [INIT] Configuring jdbcTemplate
2020-05-13 10:14:05  DEBUG   ApplicationConfig.main:115  >>> [INIT] Configuring dataSource
2020-05-13 10:14:05  DEBUG   ApplicationConfig.main:98  >>> [INIT] Configuring additionalProperties
2020-05-13 10:14:05  DEBUG   ApplicationConfig.main:214  >>> [INIT] Configuring Mail Sender
2020-05-13 10:15:42  DEBUG   ApplicationConfig.main:98  >>> [INIT] Configuring additionalProperties
2020-05-13 10:15:42  DEBUG   ApplicationConfig.main:104  >>> [END] Configuring additionalProperties
2020-05-13 10:15:55  DEBUG   ApplicationConfig.main:82  >>> [INIT] Configuring modelMapper
2020-05-13 10:15:55  DEBUG   ApplicationConfig.main:88  >>> [END] modelMapper successfully configured
2020-05-13 10:15:55  DEBUG   ApplicationConfig.main:188  >>> [INIT] Configuring exceptionTranslation
2020-05-13 10:15:55  DEBUG   ApplicationConfig.main:190  >>> [END] Configuring exceptionTranslation
2020-05-13 10:15:56  DEBUG   ApplicationConfig.main:98  >>> [INIT] Configuring additionalProperties
2020-05-13 10:15:56  DEBUG   ApplicationConfig.main:104  >>> [END] Configuring additionalProperties
2020-05-13 10:15:56  DEBUG   ApplicationConfig.main:214  >>> [INIT] Configuring Mail Sender
2020-05-13 10:17:40  DEBUG   ApplicationConfig.main:214  >>> [INIT] Configuring Mail Sender
2020-05-13 10:17:40  DEBUG   ApplicationConfig.main:239  >>> [INIT] decrypting property 1
2020-05-13 10:17:40  DEBUG   ApplicationConfig.main:256  >>> [INIT] getEncryptor
2020-05-13 10:17:40  DEBUG   ApplicationConfig.main:270  >>> [INIT] getEnvironmentConfig
2020-05-13 10:17:40  DEBUG   ApplicationConfig.main:274  >>> [END] getEnvironmentConfig
2020-05-13 10:17:40  DEBUG   ApplicationConfig.main:259  >>> [END] getEncryptor
2020-05-13 10:19:25  DEBUG   ApplicationConfig.main:82  >>> [INIT] Configuring modelMapper
2020-05-13 10:19:26  DEBUG   ApplicationConfig.main:88  >>> [END] modelMapper successfully configured
2020-05-13 10:19:26  DEBUG   ApplicationConfig.main:188  >>> [INIT] Configuring exceptionTranslation
2020-05-13 10:19:26  DEBUG   ApplicationConfig.main:190  >>> [END] Configuring exceptionTranslation
2020-05-13 10:19:26  DEBUG   ApplicationConfig.main:98  >>> [INIT] Configuring additionalProperties
2020-05-13 10:19:26  DEBUG   ApplicationConfig.main:104  >>> [END] Configuring additionalProperties
2020-05-13 10:21:14  DEBUG   RowDataServiceImpl.main:49  >>> [INIT] Persisting Excel rows
2020-05-13 10:21:14  DEBUG   RowDataServiceImpl.main:51  >>> [END] Persisted Excel rows
2020-05-13 10:21:15  DEBUG   RowDataServiceImpl.main:76  >>> [INIT] Deleting all registers for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:15  DEBUG   RowDataServiceImpl.main:78  >>> [END] Registers successfully deleted for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:15  DEBUG   RowDataServiceImpl.main:35  >>> [INIT] createRowDataTable project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:15  DEBUG   RowDataServiceImpl.main:37  >>> [END] createRowDataTable
2020-05-13 10:21:15  DEBUG   RowDataServiceImpl.main:89  >>> [INIT] Getting common data size for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:15  DEBUG   RowDataServiceImpl.main:91  >>> [END] common data size 0 for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:15  DEBUG   RowDataServiceImpl.main:62  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 10:21:15  INFO    RowDataServiceImpl.main:64  >>> [END] Got all info from table: rowDataTableName
2020-05-13 10:21:16  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 10:21:16  DEBUG   ProjectDaoImpl.main:57  >>> [INIT] Creating project projectName
2020-05-13 10:21:16  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 10:21:16  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:65  >>> [END] Project Project(id=null, name=projectName, rowDataTableName=COMMONDATAS_projectName, emailTemplate=null) successfully created
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:110  >>> [INIT] Getting project by id 0
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:113  >>> [END] project found Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:77  >>> [INIT] Updating project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:79  >>> [END] Project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:90  >>> [INIT] Getting projects 
2020-05-13 10:21:17  WARN    ProjectDaoImpl.main:93  >>> [END] No project founds
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:33  >>> [INIT] Creating table PROJECTS if not exist
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:45  >>> [END] Table PROJECTS successfully created
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:125  >>> [INIT] deleting project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   ProjectDaoImpl.main:127  >>> [END] project successfully deleted
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:56  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully created
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:113  >>> [INIT] Getting project by Id 0
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:119  >>> [END] Found project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:68  >>> [INIT] Updating project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:71  >>> [END] Project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully updated
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:53  >>> [INIT] createProject name
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 10:21:17  ERROR   ProjectServiceImpl.main:93  >>> Error getting projects null
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:83  >>> [INIT] Getting projects 
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:89  >>> [END] Got 1 projects
2020-05-13 10:21:17  DEBUG   ProjectServiceImpl.main:133  >>> [INIT] deleting project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  INFO    ProjectServiceImpl.main:135  >>> [END] project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate) successfully deleted
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:135  >>> [INIT] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:144  >>> Found contact filter FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)) for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:147  >>> [END] getContactFilter for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:93  >>> [INIT] Getting All filters
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:95  >>> [END] Found 1 filters
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:121  >>> [INIT] Updating 1 filters 
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:124  >>> [END] Filters successfully updated 
2020-05-13 10:21:17  INFO    FilterServiceImpl.main:41  >>> [INIT] persistFilterList filterList: [FilterDto(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))], project: ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:44  >>> Mapping filterDto list to FilterEntity list
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:50  >>> Setting true on contact filter that contains Email information
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:64  >>> [INIT] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:82  >>> [END] markContactFilter filterList: [Filter(id=0, name=name, filterClass=filterClass, value=value, active=false, contactFilter=false, project=Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate))]
2020-05-13 10:21:17  INFO    FilterServiceImpl.main:54  >>> [END] persistFilterList
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:107  >>> [INIT] Getting filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   FilterServiceImpl.main:109  >>> [END] Found 1 filters for project ProjectDto(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:103  >>> [INIT] Getting Filters
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:105  >>> [END] Got filters
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:131  >>> [INIT] Updating filters 
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:141  >>> [END] Filters updated
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:81  >>> [INIT] Persisting filters got from Excel
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:93  >>> [END] Persisted filters got from Excel
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:117  >>> [INIT] Getting Filters by project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:119  >>> [END] Got filters
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:63  >>> [INIT] Creating table: Filters
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:67  >>> CREATE TABLE IF NOT EXISTS FILTERS ( ID INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,class TEXT, active INTEGER default 0,contactFilter INTEGER default 0,value TEXT default NULL,project INTEGER NOT NULL,dataCreationDate TEXT NOT NULL,lastUpdatedDate TEXT,FOREIGN KEY(project) REFERENCES PROJECTS(id),CONSTRAINT UQ_NAME_PROJ UNIQUE (name, project) )
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:67  >>> INSERT INTO FILTERS (name, class, project, dataCreationDate) values ('rowId','java.lang.Integer','0','13/05/2020 10:21:17')
2020-05-13 10:21:17  DEBUG   FilterDaoImpl.main:70  >>> [END] FILTERS table successfully created
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:63  >>> [INIT] Persisting Excel rows into commonDatas table
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:73  >>> [END] Persisted Excel rows into commonDatas table
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:123  >>> [INIT] Deleting all registers for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:125  >>> [END] Registers successfully deleted for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:31  >>> [INIT] Creating table rowDataTableName
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:48  >>> Executing script CREATE TABLE IF NOT EXISTS rowDataTableName (rowId INTEGER, dataCreationDate TEXT NOT NULL, lastUpdatedDate TEXT, project INTEGER NOT NULL,FOREIGN KEY(project) REFERENCES PROJECTS(id), PRIMARY KEY (rowId, project) )
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:51  >>> [END] rowDataTableName table successfully created
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:136  >>> [INIT] Getting common data size for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:138  >>> [END] common data size 1 for project Project(id=0, name=name, rowDataTableName=rowDataTableName, emailTemplate=emailTemplate)
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:109  >>> [INIT] Getting all info from table: rowDataTableName
2020-05-13 10:21:17  DEBUG   RowDataDaoImpl.main:111  >>> [END] Got all info from table: rowDataTableName
2020-05-13 10:21:18  DEBUG   ApplicationConfig.main:82  >>> [INIT] Configuring modelMapper
2020-05-13 10:21:18  DEBUG   ApplicationConfig.main:88  >>> [END] modelMapper successfully configured
2020-05-13 10:21:18  DEBUG   ApplicationConfig.main:188  >>> [INIT] Configuring exceptionTranslation
2020-05-13 10:21:18  DEBUG   ApplicationConfig.main:190  >>> [END] Configuring exceptionTranslation
2020-05-13 10:21:18  DEBUG   ApplicationConfig.main:98  >>> [INIT] Configuring additionalProperties
2020-05-13 10:21:18  DEBUG   ApplicationConfig.main:104  >>> [END] Configuring additionalProperties
